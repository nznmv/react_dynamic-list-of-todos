{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","setQuery","selectTodos","selectUser","onChecked","className","type","placeholder","onChange","event","target","value","map","todo","classNames","completed","key","id","readOnly","checked","title","onClick","userId","API_URL","getAllTodos","a","fetch","data","json","result","getUser","user","CurrentUser","state","currentUser","loadUser","props","setState","this","clearUser","name","email","phone","React","Component","App","selectedUserId","query","valueForFilter","componentDidMount","allTodos","filter","handleChecked","todoId","queryToFind","toLowerCase","todosToShow","includes","selectedTodosToSHow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28de31d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  setQuery,\n  selectTodos,\n  selectUser,\n  onChecked,\n}) => (\n\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <input\n      type=\"text\"\n      className=\"TodoList__search\"\n      placeholder=\"Find todo by title\"\n      onChange={event => setQuery(event.target.value)}\n    />\n\n    <select\n      className=\"TodoList__select\"\n      onChange={event => selectTodos(event.target.value)}\n    >\n      <option value=\"all\">All todos</option>\n      <option value=\"active\">Active todos</option>\n      <option value=\"completed\">Completed todos</option>\n    </select>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={classNames(\n              'TodoList__item',\n              {\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              },\n            )}\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={todo.completed}\n                onChange={() => onChecked(todo.id)}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n              type=\"button\"\n              onClick={() => selectUser(todo.userId)}\n            >\n              {`User#${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  setQuery: PropTypes.func.isRequired,\n  selectTodos: PropTypes.func.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  onChecked: PropTypes.func.isRequired,\n};\n","const API_URL = `https://mate-api.herokuapp.com`;\n\nexport const getAllTodos = async() => {\n  const data = await fetch(`${API_URL}/todos`);\n  const result = await data.json();\n\n  return result.data;\n};\n\nexport const getUser = async(userId) => {\n  const user = await fetch(`${API_URL}/users/${userId}`);\n  const result = await user.json();\n\n  return result.data;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currentUser: {},\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate() {\n    const { currentUser } = this.state;\n\n    if (currentUser.id === this.props.userId) {\n      return;\n    }\n\n    this.loadUser();\n  }\n\n  loadUser = async() => {\n    const user = await getUser(this.props.userId);\n\n    if (!user) {\n      return;\n    }\n\n    this.setState(state => ({ currentUser: user }));\n  };\n\n  render() {\n    const { currentUser } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${userId}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={() => clearUser()}\n        >\n          Clear user\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    query: '',\n    valueForFilter: 'all',\n  };\n\n  componentDidMount = async() => {\n    const allTodos = await getAllTodos();\n\n    this.setState({ todos: allTodos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  setQuery = (value) => {\n    this.setState({ query: value });\n  }\n\n  selectTodos = (filter) => {\n    this.setState({ valueForFilter: filter });\n  }\n\n  handleChecked = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId, query, valueForFilter } = this.state;\n    const queryToFind = query.toLowerCase();\n    const todosToShow = todos.filter(\n      todo => todo.title\n        && todo.userId\n        && todo.title.toLowerCase().includes(queryToFind),\n    );\n\n    let selectedTodosToSHow = todosToShow;\n\n    if (valueForFilter === 'completed') {\n      selectedTodosToSHow = todosToShow.filter(todo => todo.completed);\n    } else if (valueForFilter === 'active') {\n      selectedTodosToSHow = todosToShow.filter(todo => !todo.completed);\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={selectedTodosToSHow}\n            selectUser={this.selectUser}\n            setQuery={this.setQuery}\n            selectTodos={this.selectTodos}\n            onChecked={this.handleChecked}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}